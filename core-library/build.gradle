apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 打包源码jar
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    //编译groovy代码时采用 UTF-8
    tasks.withType(GroovyCompile) {
        groovyOptions.encoding = "MacRoman"
    }

    //编译JAVA文件时采用UTF-8
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

    // 打包文档jar
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }




    /*在javadoc task执行之前先添加第三方的依赖进来，否则会找不到相关的jar包*/
    afterEvaluate {
        javadoc.classpath += files(android.libraryVariants.collect { variant2 ->
            variant2.getJavaCompiler().classpath.files
        })
    }

    javadoc {
        options {
            // 语言
            locale 'en_US'
            encoding 'UTF-8'
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
    }
}



dependencies {
    // 从config.gradle中引用
    implementation rootProject.ext.dependencies["appcompat-v7"]
}
